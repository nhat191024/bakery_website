/*!
 * Start Bootstrap - SB Admin 2 v4.1.4 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */
!function (l) { "use strict"; l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) { l("body").toggleClass("sidebar-toggled"), l(".sidebar").toggleClass("toggled"), l(".sidebar").hasClass("toggled") && l(".sidebar .collapse").collapse("hide") }), l(window).resize(function () { l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"), l(window).width() < 480 && !l(".sidebar").hasClass("toggled") && (l("body").addClass("sidebar-toggled"), l(".sidebar").addClass("toggled"), l(".sidebar .collapse").collapse("hide")) }), l("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) { var o; 768 < l(window).width() && (o = (o = e.originalEvent).wheelDelta || -o.detail, this.scrollTop += 30 * (o < 0 ? 1 : -1), e.preventDefault()) }), l(document).on("scroll", function () { 100 < l(this).scrollTop() ? l(".scroll-to-top").fadeIn() : l(".scroll-to-top").fadeOut() }), l(document).on("click", "a.scroll-to-top", function (e) { var o = l(this); l("html, body").stop().animate({ scrollTop: l(o.attr("href")).offset().top }, 1e3, "easeInOutExpo"), e.preventDefault() }) }(jQuery);

$(document).ready(function () {
    function getMessage() {
        // clean the inbox first
        $('#message-list').empty();
        $.ajax({
            url: "/admin/message/get",
            method: "GET",
            success: function (data) {
                $messages = data;
                $count = $messages.length;
                const messageTemplate = $('.messageTemplate');
                $('.message-count').text($count);
                $('.message-count').addClass('d-none');
                $.each($messages, function (index, item) {
                    $('.message-count').removeClass('d-none');
                    let messageItem = messageTemplate.clone().removeClass('d-none');
                    messageItem.find('#message-index').text(index+1);
                    messageItem.find('#message-subject').text(item.message);
                    messageItem.find('#message-info').text(item.name + ' · ' + getTimePassedBy(item.created_at));
                    messageItem.find('#message-link').attr('href', '/admin/message/' + item.id);
                    $('#message-list').append(messageItem);
                });
            }
        })
    }
    function getPendingBill(){
        $('#pending-bill-list').empty();
        $.ajax({
            url: "/admin/bill/get-pending",
            method: "GET",
            success: function (data) {
                billData = data;

                console.log(billData[0]);
                console.log(billData[0]['accessory_id']);
                console.log(billData[0]['address']);
                console.log(billData[0]['created_at']);
                console.log(billData[0]['delivery_method']);
                console.log(billData[0]['email']);
                console.log(billData[0]['full_name']);
                console.log(billData[0]['id']);
                console.log(billData[0]['order_date']);
                console.log(billData[0]['payment_method']);
                console.log(billData[0]['phone_number']);
                console.log(billData[0]['status']);
                console.log(billData[0]['total_amount']);
                console.log(billData[0]['updated_at']);
                console.log(billData[0]['voucher_code']);

                $bills = billData;
                $count = $bills.length;
                console.log('bill length',$count);
                $('.pending-bill-count').text($count);
                const billTemplate = $('.billTemplate');
                $.each($bills, function (index, item) {
                    let billItem = billTemplate.clone().removeClass('d-none');
                    billItem.find('#bill-index').text(index+1);
                    billItem.find('#bill-code').text(item.code);
                    billItem.find('#bill-info').text(item.name + ' · ' + getTimePassedBy(item.created_at));
                    billItem.find('#bill-link').attr('href', '/admin/bill/' + item.id);
                    $('#pending-bill-list').append(billItem);
                });
            }
        })
    }
    getMessage();
    getPendingBill();
    // setInterval(getPendingBill, 1000);

});

function getTimePassedBy(createTime) {
    const formatter = new Intl.RelativeTimeFormat('vi', { numeric: 'auto' });
    const timeAgo = formatter.format(
        -Math.round((new Date() - new Date(createTime)) / 60000),
        'minute'
    );
    return timeAgo;
}

function generateVoucherCode()
{
    var result = generateCode();
    $('#voucherCodeField').val(result);
    console.log(result);
}

function generateCode() {
    let result = '';
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const charactersLength = characters.length;
    for (let i = 0; i < 10; i++) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result.toUpperCase();
}

